% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/hype_par_integer.R
\name{R6_par_integer}
\alias{R6_par_integer}
\title{Parameter with uniform distribution over integer range
for hyperparameter optimization}
\description{
Parameter with uniform distribution over integer range
for hyperparameter optimization

Parameter with uniform distribution over integer range
for hyperparameter optimization
}
\examples{
p1 <- R6_par_integer$new('x1', 0, 2)
class(p1)
print(p1)
}
\section{Super class}{
\code{comparer::par_hype} -> \code{par_integer}
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{name}}{Name of the parameter, must match the input to `eval_func`.}

\item{\code{lower}}{Lower bound of the parameter}

\item{\code{upper}}{Upper bound of the parameter}

\item{\code{ggtrans}}{Transformation for ggplot, see ggplot2::scale_x_continuous()}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-par_integer-fromraw}{\code{R6_par_integer$fromraw()}}
\item \href{#method-par_integer-toraw}{\code{R6_par_integer$toraw()}}
\item \href{#method-par_integer-generate}{\code{R6_par_integer$generate()}}
\item \href{#method-par_integer-isvalid}{\code{R6_par_integer$isvalid()}}
\item \href{#method-par_integer-convert_to_mopar}{\code{R6_par_integer$convert_to_mopar()}}
\item \href{#method-par_integer-new}{\code{R6_par_integer$new()}}
\item \href{#method-par_integer-print}{\code{R6_par_integer$print()}}
\item \href{#method-par_integer-clone}{\code{R6_par_integer$clone()}}
}
}
\if{html}{\out{
<details open><summary>Inherited methods</summary>
<ul>
<li><span class="pkg-link" data-pkg="comparer" data-topic="par_hype" data-id="getseq"><a href='../../comparer/html/par_hype.html#method-par_hype-getseq'><code>comparer::par_hype$getseq()</code></a></span></li>
</ul>
</details>
}}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-par_integer-fromraw"></a>}}
\if{latex}{\out{\hypertarget{method-par_integer-fromraw}{}}}
\subsection{Method \code{fromraw()}}{
Function to convert from raw scale to transformed scale
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{R6_par_integer$fromraw(x)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{x}}{Value of raw scale}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-par_integer-toraw"></a>}}
\if{latex}{\out{\hypertarget{method-par_integer-toraw}{}}}
\subsection{Method \code{toraw()}}{
Function to convert from transformed scale to raw scale
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{R6_par_integer$toraw(x)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{x}}{Value of transformed scale}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-par_integer-generate"></a>}}
\if{latex}{\out{\hypertarget{method-par_integer-generate}{}}}
\subsection{Method \code{generate()}}{
Generate values in the raw space based on quantiles.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{R6_par_integer$generate(q)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{q}}{In [0,1].}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-par_integer-isvalid"></a>}}
\if{latex}{\out{\hypertarget{method-par_integer-isvalid}{}}}
\subsection{Method \code{isvalid()}}{
Check if input is valid for parameter
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{R6_par_integer$isvalid(x)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{x}}{Parameter value}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-par_integer-convert_to_mopar"></a>}}
\if{latex}{\out{\hypertarget{method-par_integer-convert_to_mopar}{}}}
\subsection{Method \code{convert_to_mopar()}}{
Convert this to a parameter for the
mixopt R package.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{R6_par_integer$convert_to_mopar(raw_scale = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{raw_scale}}{Should it be on the raw scale?}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-par_integer-new"></a>}}
\if{latex}{\out{\hypertarget{method-par_integer-new}{}}}
\subsection{Method \code{new()}}{
Create a hyperparameter with uniform distribution
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{R6_par_integer$new(name, lower, upper)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{name}}{Name of the parameter, must match the input to `eval_func`.}

\item{\code{lower}}{Lower bound of the parameter}

\item{\code{upper}}{Upper bound of the parameter}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-par_integer-print"></a>}}
\if{latex}{\out{\hypertarget{method-par_integer-print}{}}}
\subsection{Method \code{print()}}{
Print details of the object.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{R6_par_integer$print(...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{...}}{not used,}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-par_integer-clone"></a>}}
\if{latex}{\out{\hypertarget{method-par_integer-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{R6_par_integer$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
